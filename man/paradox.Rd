% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paradox.R
\name{canvas}
\alias{canvas}
\alias{paradox}
\alias{paradoxes}
\alias{scale_shape}
\title{Paradox}
\usage{
canvas()

paradox(
  shape,
  dist = 0.05,
  reverse = FALSE,
  cols = colorRampPalette(c("red", "blue"))(40),
  debug = FALSE
)

paradoxes(shapes, dist = 0.05, cols = colorRampPalette(c("red", "blue"))(40))

scale_shape(shape, scale = 1, shift = 0)
}
\arguments{
\item{shape}{a matrix with colums x and y definining a shape to doodle within,
can be any closed polygon, but some shapes work better than others.}

\item{dist}{the distance up the adjacent edge where each new line will be drawn, default 0.05}

\item{reverse}{should the shape be drawn in reverse order (see examples)}

\item{cols}{a palate of colours as a vector of strings interpretable as colours}

\item{debug}{should debug messages be produces (default FALSE)}

\item{shapes}{a list of shapes (polygons) to doodle within}

\item{scale}{if scaling, how much to scale by}

\item{shift}{if scaling, should the shape also be shifted and by how much}
}
\value{
displays a plot
}
\description{
Functions to make pleasing doodles
}
\examples{

if (interactive()) {

  triangle <- cbind(x = c(0, 1, .7), y = c(0, 0.1, 1))
  triangle2 <- cbind(x = c(0, 0, .7), y = c(0, 1, 1))

  square <- cbind(x = c(0, 1, 1, 0), y = c(0, 0, 1, 1))

  canvas()
  paradox(square, 0.03)

  canvas()
  paradox(triangle, 0.042)
  paradox(triangle2, 0.042)

  canvas()
  paradox(scale_shape(square, c(0.5, 1)), 0.03)
  paradox(scale_shape(square, c(0.5, 1), c(0.5, 0)), 0.05, reverse = TRUE)

  canvas()
  dist <- 0.02
  paradox(scale_shape(square, .5), dist)
  paradox(scale_shape(square, .5, c(0.5, 0)), dist, reverse = TRUE)
  paradox(scale_shape(square, .5, .5), dist)
  paradox(scale_shape(square, .5, c(0, 0.5)), dist, reverse = TRUE)

  canvas()
  dist <- 0.02
  paradox(scale_shape(square, .5), dist, reverse = TRUE)
  paradox(scale_shape(square, .5, c(0.5, 0)), dist, reverse = TRUE)
  paradox(scale_shape(square, .5, .5), dist, reverse = TRUE)
  paradox(scale_shape(square, .5, c(0, 0.5)), dist, reverse = TRUE)

  canvas()
  dist <- 0.02

  cols1 <- colorRampPalette(c("red", "blue"))(30)
  cols2 <- colorRampPalette(c("blue", "red"))(30)
  cols3 <- colorRampPalette(c("green", "purple"))(30)
  cols4 <- colorRampPalette(c("purple", "green"))(30)

  paradox(scale_shape(square, .5), dist,
    reverse = TRUE,
    cols = c(rbind(cols1, cols2, cols3, cols4))
  )
  paradox(scale_shape(square, .5, c(0.5, 0)), dist,
    reverse = FALSE,
    cols = c(rbind(cols3, cols4, cols1, cols2))
  )
  paradox(scale_shape(square, .5, .5), dist,
    reverse = FALSE,
    cols = c(rbind(cols1, cols2, cols3, cols4))
  )
  paradox(scale_shape(square, .5, c(0, 0.5)), dist,
    reverse = TRUE,
    cols = c(rbind(cols3, cols4, cols1, cols2))
  )
}

}
